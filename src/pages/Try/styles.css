.try-container {
    display: flex;
    flex-direction: column;
    height: 100vh;
    background-color: #1a1a1a;
    padding: 20px;
    gap: 20px;
}

.upper-section {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 30px;
}

.lower-section {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
}

.input-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
}

.question-input {
    width: 300px;
    padding: 12px;
    border: 2px solid #333;
    border-radius: 8px;
    background-color: rgba(255, 255, 255, 0.9);
    color: #333;
    font-size: 16px;
}

.start-button {
    padding: 12px 40px;
    border: none;
    border-radius: 8px;
    background-color: #4a90e2;
    color: white;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s;
}

.start-button:hover {
    background-color: #357abd;
}

.cards-positions {
    display: flex;
    gap: 30px;
    margin-bottom: 20px;
}

.result-text {
    max-width: 800px;
    padding: 20px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    color: #fff;
    font-size: 18px;
    line-height: 1.6;
    text-align: center;
}

.card-position {
    width: 200px;
    height: 300px;
    border: 2px dashed rgba(255, 255, 255, 0.3);
    border-radius: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.selected-card {
    width: 100%;
    height: 100%;
    animation: moveToPosition 1s ease forwards;
    transform-origin: center center;
}

@keyframes moveToPosition {
    0% {
        transform: translate(0, 100vh) rotate(0deg);
        opacity: 0;
    }
    100% {
        transform: translate(0, 0) rotate(360deg);
        opacity: 1;
    }
}

.selected-card img {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

.cards-deck {
    position: relative;
    width: 200px;
    height: 300px;
    perspective: 1000px;
}

.card {
    position: absolute;
    width: 100%;
    height: 100%;
    transform-origin: bottom center;
    transition: transform 1s ease;
}

.card img {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

/* 初始状态：卡牌叠在一起 */
.cards-deck:not(.animate) .card {
    transform: translateY(calc(var(--index) * -1px));
}

/* 扇形展开动画 */
.cards-deck.animate .card {
    transform: 
        translateY(0)
        rotate(calc((var(--index) - (var(--total) - 1) / 2) * 4deg));
    animation: rotateAround calc(1s + (var(--total) - var(--index) - 1) * 0.1s) ease-in-out forwards;
    animation-delay: 2s; /* 等待扇形展开后开始旋转 */
}

/* 圆周旋转动画 */
@keyframes rotateAround {
    from {
        transform: 
            translateY(0)
            rotate(calc((var(--index) - (var(--total) - 1) / 2) * 4deg));
    }
    to {
        transform: 
            translateY(0)
            rotate(calc((var(--index) - (var(--total) - 1) / 2) * 4deg + 360deg));
    }
}
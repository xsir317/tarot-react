.try-container {
    display: flex;
    flex-direction: column;
    height: 100vh;
    background-color: #1a1a1a;
    padding: 20px;
    gap: 10px;  /* 减小整体间距 */
}

.upper-section {
    flex: 0 0 auto;  /* 改为固定高度 */
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;  /* 减小内部间距 */
}

.lower-section {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    padding: 10px;
    overflow: hidden;  /* 移除滚动条 */
}

.result-text {
    max-width: 800px;
    height: 100%;        /* 使用完整高度 */
    overflow-y: auto;    /* 只在结果文本区域保留滚动条 */
    padding: 20px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    color: #fff;
    font-size: 18px;
    line-height: 1.6;
    text-align: center;
}

.input-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
}

.question-input {
    width: 300px;
    padding: 12px;
    border: 2px solid #333;
    border-radius: 8px;
    background-color: rgba(255, 255, 255, 0.9);
    color: #333;
    font-size: 16px;
}

.start-button {
    padding: 12px 40px;
    border: none;
    border-radius: 8px;
    background-color: #4a90e2;
    color: white;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s;
}

.start-button:hover {
    background-color: #357abd;
}

.cards-positions {
    display: flex;
    gap: 20px;
    margin-bottom: 20px;
    width: 100%;
    max-width: 700px;  /* 限制最大宽度 */
    justify-content: center;  /* 居中显示 */
    padding: 10px;
}

.result-text {
    max-width: 800px;
    padding: 20px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    color: #fff;
    font-size: 18px;
    line-height: 1.6;
    text-align: center;
}

/* 合并 .card-position 的样式 */
.card-position {
    width: 160px;      /* 使用新的尺寸 */
    height: 240px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-shrink: 0;
}

/* 只在输入状态显示虚线边框 */
.try-container[data-state="input"] .card-position {
    border: 2px dashed rgba(255, 255, 255, 0.3);
    border-radius: 10px;
}

/* 更新 .selected-card 的尺寸以匹配 */
.selected-card {
    width: 100%;
    height: 100%;
    perspective: 1000px;
    cursor: pointer;
    animation: moveToPosition 1s ease forwards;
    transform-origin: center center;
}

.card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.8s;
    transform-style: preserve-3d;
}

.selected-card.flipped .card-inner {
    transform: rotateY(180deg);
}

.card-front, .card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
}

.card-back {
    transform: rotateY(180deg);
}

.card-front img, .card-back img {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

@keyframes moveToPosition {
    0% {
        transform: translate(0, 100vh) rotate(0deg);
        opacity: 0;
    }
    100% {
        transform: translate(0, 0) rotate(360deg);
        opacity: 1;
    }
}

.selected-card img {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

.cards-deck {
    position: relative;
    width: 200px;
    height: 300px;
    perspective: 1000px;
}

.card {
    position: absolute;
    width: 100%;
    height: 100%;
    transform-origin: bottom center;
    transition: transform 1s ease;
}

.card img {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

/* 初始状态：卡牌叠在一起 */
.cards-deck:not(.animate) .card {
    transform: translateY(calc(var(--index) * -1px));
}

/* 扇形展开动画 */
.cards-deck.animate .card {
    transform: 
        translateY(0)
        rotate(calc((var(--index) - (var(--total) - 1) / 2) * 4deg));
    animation: rotateAround calc(1s + (var(--total) - var(--index) - 1) * 0.1s) ease-in-out forwards;
    animation-delay: 2s; /* 等待扇形展开后开始旋转 */
}

/* 圆周旋转动画 */
@keyframes rotateAround {
    from {
        transform: 
            translateY(0)
            rotate(calc((var(--index) - (var(--total) - 1) / 2) * 4deg));
    }
    to {
        transform: 
            translateY(0)
            rotate(calc((var(--index) - (var(--total) - 1) / 2) * 4deg + 360deg));
    }
}

.result-text {
    padding: 20px;
    line-height: 1.6;
}

.result-text h1,
.result-text h2,
.result-text h3,
.result-text h4,
.result-text h5,
.result-text h6 {
    margin: 1em 0 0.5em;
}

.result-text p {
    margin: 0.5em 0;
}

.result-text strong {
    font-weight: bold;
}

.result-text em {
    font-style: italic;
}

.result-text ul,
.result-text ol {
    margin: 0.5em 0;
    padding-left: 1.5em;
}

.result-text blockquote {
    border-left: 4px solid #ddd;
    margin: 0.5em 0;
    padding-left: 1em;
    color: #666;
}